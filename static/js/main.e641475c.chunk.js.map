{"version":3,"sources":["components/feedback/FeedbackOptions.js","components/SectionTitle/SectionTitle.js","components/Notification/Notification.js","components/statistics/statistics.js","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","className","onClick","SectionTitle","children","Notification","messadge","Statistics","render","props","good","bad","neutral","total","positivePercentage","Component","App","state","goodProps","neutralProps","badProps","event","target","setState","prevState","this","countTotalFeedback","toFixed","countPositiveFeedbackPercentage","defaultProps","ReactDOM","StrictMode","document","getElementById"],"mappings":"wPAoBeA,EAhBQ,SAAC,GAAD,EAAEC,QAAF,IAAUC,EAAV,EAAUA,gBAAV,OAGnB,gCACA,wBAAQC,UAAU,OAAOC,QAASF,EAAlC,kBACA,wBAAQC,UAAU,UAASC,QAASF,EAApC,qBACA,wBAAQC,UAAU,MAAKC,QAASF,EAAhC,qBCCWG,MAPb,YAAqC,IAAbC,EAAY,EAAZA,SAGtB,OAAO,8BAAOA,KCGHC,EANI,SAAC,GAAc,IAAbC,EAAY,EAAZA,SACnB,OAAQ,4BAAIA,KCoCCC,E,4MAvBbC,OAAO,WACH,MAAkD,EAAKC,MAAhDC,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,IAAIC,EAAhB,EAAgBA,QAAQC,EAAxB,EAAwBA,MAAMC,EAA9B,EAA8BA,mBAC9B,OAAY,IAARD,EACK,cAAC,EAAD,UAAc,cAAC,EAAD,CAAcP,SAAQ,wBAKvC,gCACF,cAAC,EAAD,UAAc,sLAAiCI,OAC/C,cAAC,EAAD,UAAc,8MAAqCE,OACnD,cAAC,EAAD,UAAc,gLAAgCD,OAC9C,cAAC,EAAD,UAAc,yKAA8BE,OAC5C,cAAC,EAAD,UAAc,yOAA4CC,EAA5C,a,YAxBCC,aCDnBC,E,4MAaJC,MAAQ,CACNP,KAAM,EAAKD,MAAMS,UACjBN,QAAS,EAAKH,MAAMU,aACpBR,IAAK,EAAKF,MAAMW,U,EAElBpB,gBAAgB,SAACqB,GACc,SAAzBA,EAAMC,OAAOrB,UACf,EAAKsB,UAAS,SAACC,GAAa,MAAO,CAACd,KAAKc,EAAUd,KAAK,MACvB,YAAzBW,EAAMC,OAAOrB,UACrB,EAAKsB,UAAS,SAACC,GAAa,MAAO,CAACZ,QAAQY,EAAUZ,QAAQ,MAC5B,QAAzBS,EAAMC,OAAOrB,WACtB,EAAKsB,UAAS,SAACC,GAAa,MAAO,CAACb,IAAIa,EAAUb,IAAI,O,wDAK1D,WACE,OAAOc,KAAKR,MAAMP,KAAKe,KAAKR,MAAML,QAAQa,KAAKR,MAAMN,M,6CAEvD,WAEE,OADyC,IAAhBc,KAAKR,MAAMP,KAASe,KAAKC,sBACxBC,QAAQ,K,oBAOpC,WACE,MAAyBF,KAAKR,MAAvBP,EAAP,EAAOA,KAAKE,EAAZ,EAAYA,QAAQD,EAApB,EAAoBA,IAGjB,OACK,qCACN,eAAC,EAAD,WAAc,uDAEP,cAAC,EAAD,CAAkBX,gBAAiByB,KAAKzB,kBAIxC,+CAGD,cAAC,EAAD,CAAYU,KAAMA,EAAMC,IAAKA,EAAKC,QAASA,EAASC,MAAOY,KAAKC,qBAAsBZ,mBAAoBW,KAAKG,2C,GAxDzGb,aAAZC,EACGa,aAAa,CAEhBX,UAAU,EACVC,aAAa,EACbC,SAAS,GAiEAJ,QCtEfc,IAAStB,OACP,cAAC,IAAMuB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e641475c.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst FeedbackOptions= ({options,onLeaveFeedback})=>(\r\n  \r\n \r\n    <div>\r\n    <button className=\"Good\" onClick={onLeaveFeedback}>Good</button>\r\n    <button className=\"Neutral\"onClick={onLeaveFeedback}>Neutral</button>\r\n    <button className=\"Bad\"onClick={onLeaveFeedback}>Bad</button>\r\n   \r\n  </div>\r\n \r\n)\r\nFeedbackOptions.propTypes ={\r\n onLeaveFeedback:PropTypes.func.isRequired\r\n }\r\n\r\n\r\nexport default FeedbackOptions;","\r\nimport React from 'react';\r\n//import PropTypes from 'prop-types';\r\n  \r\n  function SectionTitle({ children }) {\r\n   \r\n    \r\n    return <div >{children}</div>;\r\n  }\r\n  \r\n\r\nexport default SectionTitle;\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\nconst Notification=({messadge})=>{\r\n  return  <p>{messadge}</p>\r\n}\r\n\r\n\r\n\r\nexport default Notification;","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SectionTitle from '../SectionTitle'\r\nimport Notification from '../Notification';\r\n\r\n\r\n\r\nclass Statistics extends Component{\r\n  \r\n\r\n  static propTypes={\r\n   \r\n    total:PropTypes.number,\r\n    positivePercentage:PropTypes.string\r\n  }\r\n  \r\n         \r\n   \r\n  render=()=>{\r\n      const {good,bad,neutral,total,positivePercentage}=this.props\r\n      if (total===0) {\r\n        return <SectionTitle><Notification messadge={`No feedback given`}/></SectionTitle>;\r\n      }\r\n          return (\r\n            \r\n         \r\n            <div>\r\n          <SectionTitle><p>Кол-во хороших комментариев: {good}</p></SectionTitle>\r\n          <SectionTitle><p>Кол-во нейтральных комментариев: {neutral}</p></SectionTitle>\r\n          <SectionTitle><p>Кол-во плохих комментариев: {bad}</p></SectionTitle>\r\n          <SectionTitle><p>Общее кол-во комментариев:{total}</p></SectionTitle>\r\n          <SectionTitle><p>% хороших комментариев от общего кол-ва:{positivePercentage}%</p></SectionTitle>\r\n         \r\n        </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Statistics;","import React,{Component} from 'react';\nimport PropTypes from 'prop-types'\nimport FeedbackOptions from './components/feedback/'\nimport Statistics from './components/statistics'\nimport SectionTitle from './components/SectionTitle'\n\nclass App extends Component {\n  static defaultProps={\n    \n      goodProps:0,\n      neutralProps:0,\n      badProps:0\n     \n  }\n  static propTypes={\n    goodProps:PropTypes.number,\n    neutralProps:PropTypes.number,\n    badProps:PropTypes.number\n  }\n  state = {\n    good: this.props.goodProps,\n    neutral: this.props.neutralProps,\n    bad: this.props.badProps\n  }\n  onLeaveFeedback=(event)=>{\n    if (event.target.className==='Good'){\n      this.setState((prevState)=>{return {good:prevState.good+1}})\n    } else if(event.target.className==='Neutral'){\n      this.setState((prevState)=>{return {neutral:prevState.neutral+1}})\n    } else if (event.target.className==='Bad'){\n      this.setState((prevState)=>{return {bad:prevState.bad+1}})\n    }\n    \n\n  }\n  countTotalFeedback(){\n    return this.state.good+this.state.neutral+this.state.bad\n  }\n  countPositiveFeedbackPercentage(){\n    const positivePercentage=this.state.good*100/this.countTotalFeedback()\n    return positivePercentage.toFixed(2)\n  }\n  \n  \n\n \n \n  render() {\n    const {good,neutral,bad}=this.state;\n    \n    \n       return (\n            <>\n      <SectionTitle><h1>Please leave feedback</h1> \n        \n             <FeedbackOptions  onLeaveFeedback={this.onLeaveFeedback}/>\n                \n\n         \n             <h3>Statistics</h3>\n        </SectionTitle>\n        \n            <Statistics good={good} bad={bad} neutral={neutral} total={this.countTotalFeedback()} positivePercentage={this.countPositiveFeedbackPercentage()} />\n        \n        \n\n              \n      </>\n    );\n\n  }}\n\n    \n  \n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}