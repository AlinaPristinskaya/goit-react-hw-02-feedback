{"version":3,"sources":["components/Feedback/FeedbackOptions.js","components/SectionTitle/SectionTitle.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","SectionTitle","children","Notification","messadge","Statistics","render","props","good","bad","neutral","total","positivePercentage","Component","App","state","e","buttonClick","target","innerText","setState","prevState","this","countTotalFeedback","Math","round","Object","keys","countPositiveFeedbackPercentage","defaultProps","ReactDOM","StrictMode","document","getElementById"],"mappings":"+PAUeA,EANQ,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAQC,EAAV,EAAUA,gBAAV,OACrB,8BAAMD,EAAQE,KAAI,SAACC,GAAD,OAAW,wBAASC,KAAK,SAAsBC,QAASJ,EAA7C,SAA+DE,GAAnCA,SCI5CG,MANf,YAAqC,IAAbC,EAAY,EAAZA,SAEpB,OAAO,8BAAOA,KCKHC,EANI,SAAC,GAAc,IAAbC,EAAY,EAAZA,SACnB,OAAQ,4BAAIA,KCgCCC,E,4MAvBbC,OAAO,WACH,MAAkD,EAAKC,MAAhDC,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,IAAIC,EAAhB,EAAgBA,QAAQC,EAAxB,EAAwBA,MAAMC,EAA9B,EAA8BA,mBAC9B,OAAY,IAARD,EACK,cAAC,EAAD,UAAc,cAAC,EAAD,CAAcP,SAAQ,wBAKvC,gCACF,cAAC,EAAD,UAAc,sLAAiCI,OAC/C,cAAC,EAAD,UAAc,8MAAqCE,OACnD,cAAC,EAAD,UAAc,gLAAgCD,OAC9C,cAAC,EAAD,UAAc,yKAA8BE,OAC5C,cAAC,EAAD,UAAc,yOAA4CC,EAA5C,a,YApBCC,aCDnBC,E,4MAWJC,MAAQ,CACNP,KAAM,EACNE,QAAS,EACTD,IAAK,G,EAEPb,gBAAgB,SAAAoB,GACf,IAAMC,EAAaD,EAAEE,OAAOC,UAC5B,EAAKC,UAAS,SAAAC,GAAS,sBAAKJ,EAAaI,EAAUJ,GAAa,O,wDAMjE,WACE,OAAOK,KAAKP,MAAMP,KAAKc,KAAKP,MAAML,QAAQY,KAAKP,MAAMN,M,6CAEvD,WACE,IAAMG,EAAmC,IAAhBU,KAAKP,MAAMP,KAASc,KAAKC,qBAClD,OAAOC,KAAKC,MAAMb,K,oBAOpB,WACE,MAAyBU,KAAKP,MAAvBP,EAAP,EAAOA,KAAKE,EAAZ,EAAYA,QAAQD,EAApB,EAAoBA,IAGjB,OACK,qCACN,eAAC,EAAD,WACA,uDACA,cAAC,EAAD,CAAiBd,QAAS+B,OAAOC,KAAKL,KAAKP,OAAQnB,gBAAiB0B,KAAK1B,kBACzE,+CAEA,cAAC,EAAD,CAAYY,KAAMA,EAAMC,IAAKA,EAAKC,QAASA,EAASC,MAAOW,KAAKC,qBAAsBX,mBAAoBU,KAAKM,2C,GA/CnGf,aAAZC,EACGe,aAAa,CAChBrB,KAAK,EACLE,QAAQ,EACRD,IAAI,GAqDKK,QCzDfgB,IAASxB,OACP,cAAC,IAAMyB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.33a1fb46.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nconst FeedbackOptions= ({options,onLeaveFeedback})=>(\r\n  <div>{options.map((option)=>(<button  type=\"button\" key={option} onClick={onLeaveFeedback}>{option}</button>\r\n  ))}</div>\r\n\r\n)\r\n\r\nexport default FeedbackOptions;","\r\nimport React from 'react';\r\n  \r\nfunction SectionTitle({ children }) {\r\n   \r\n    return <div >{children}</div>;\r\n  }\r\n  \r\n\r\nexport default SectionTitle;\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\nconst Notification=({messadge})=>{\r\n  return  <p>{messadge}</p>\r\n}\r\n\r\n\r\n\r\nexport default Notification;","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SectionTitle from '../SectionTitle'\r\nimport Notification from '../Notification';\r\n\r\n\r\n\r\nclass Statistics extends Component{\r\n    static propTypes={\r\n    total:PropTypes.number,\r\n    positivePercentage:PropTypes.number\r\n  }\r\n      \r\n   \r\n  render=()=>{\r\n      const {good,bad,neutral,total,positivePercentage}=this.props\r\n      if (total===0) {\r\n        return <SectionTitle><Notification messadge={`No feedback given`}/></SectionTitle>;\r\n      }\r\n          return (\r\n            \r\n         \r\n            <div>\r\n          <SectionTitle><p>Кол-во хороших комментариев: {good}</p></SectionTitle>\r\n          <SectionTitle><p>Кол-во нейтральных комментариев: {neutral}</p></SectionTitle>\r\n          <SectionTitle><p>Кол-во плохих комментариев: {bad}</p></SectionTitle>\r\n          <SectionTitle><p>Общее кол-во комментариев:{total}</p></SectionTitle>\r\n          <SectionTitle><p>% хороших комментариев от общего кол-ва:{positivePercentage}%</p></SectionTitle>\r\n         \r\n        </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Statistics;","import React,{Component} from 'react';\nimport PropTypes from 'prop-types'\nimport FeedbackOptions from './components/Feedback/'\nimport Statistics from './components/Statistics'\nimport SectionTitle from './components/SectionTitle'\n\nclass App extends Component {\n  static defaultProps={\n      good:0,\n      neutral:0,\n      bad:0\n  }\n  static propTypes={\n    goods:PropTypes.number,\n    neutral:PropTypes.number,\n    bad:PropTypes.number\n  }\n  state = {\n    good: 0,\n    neutral: 7,\n    bad: 2\n  }\n  onLeaveFeedback=e=>{\n   const buttonClick= e.target.innerText;\n   this.setState(prevState=>({[buttonClick]:prevState[buttonClick]+1}))\n    \n     \n\n  }\n  \n  countTotalFeedback(){\n    return this.state.good+this.state.neutral+this.state.bad\n  }\n  countPositiveFeedbackPercentage(){\n    const positivePercentage=this.state.good*100/this.countTotalFeedback()\n    return Math.round(positivePercentage)\n  }\n  \n  \n\n \n \n  render() {\n    const {good,neutral,bad}=this.state;\n    \n    \n       return (\n            <>\n      <SectionTitle>\n      <h1>Please leave feedback</h1>        \n      <FeedbackOptions options={Object.keys(this.state)} onLeaveFeedback={this.onLeaveFeedback}/>              \n      <h3>Statistics</h3>\n      </SectionTitle>        \n      <Statistics good={good} bad={bad} neutral={neutral} total={this.countTotalFeedback()} positivePercentage={this.countPositiveFeedbackPercentage()} />\n            </>\n    );\n\n  }}\n\n    \n  \n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}