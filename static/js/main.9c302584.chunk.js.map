{"version":3,"sources":["components/feedback/FeedbackOptions.js","components/statistics/statistics.js","App.js","index.js"],"names":["FeedbackOptions","className","onClick","this","props","onLeaveFeedback","Component","Statistics","state","total","positivePercentage","options","good","neutral","bad","reduce","acc","cur","App","goodProps","neutralProps","badProps","event","target","setState","prevState","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAkBeA,E,4JAdb,WACE,OACA,gCACM,wBAAQC,UAAU,OAAOC,QAASC,KAAKC,MAAMC,gBAA7C,kBACA,wBAAQJ,UAAU,UAASC,QAASC,KAAKC,MAAMC,gBAA/C,qBACA,wBAAQJ,UAAU,MAAKC,QAASC,KAAKC,MAAMC,gBAA3C,wB,GAPoBC,aC2CfC,E,4MApCXC,MAAM,CACFC,MAAM,EAAKL,MAAMK,MACjBC,mBAAmB,EAAKN,MAAMM,oB,EAElCC,QAAQ,WAGN,MAFe,CAAC,EAAKP,MAAMQ,KAAK,EAAKR,MAAMS,QAAQ,EAAKT,MAAMU,KAC3CC,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,M,4CAUhD,WACE,MAA4Bd,KAAKC,MAAzBQ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,EAAkCX,KAAKK,MAAhCC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,mBAGZ,OACI,gCACF,sLAAiCE,KACjC,8MAAqCC,KACrC,gLAAgCC,KAChC,yKAA8BL,KAC9B,yOAA4CC,EAA5C,c,GAhCeJ,aCCnBY,E,4MAaJV,MAAQ,CACNI,KAAM,EAAKR,MAAMe,UACjBN,QAAS,EAAKT,MAAMgB,aACpBN,IAAK,EAAKV,MAAMiB,U,EAElBhB,gBAAgB,SAACiB,GACc,SAAzBA,EAAMC,OAAOtB,UACf,EAAKuB,UAAS,SAACC,GAAa,MAAO,CAACb,KAAKa,EAAUb,KAAK,MACvB,YAAzBU,EAAMC,OAAOtB,UACrB,EAAKuB,UAAS,SAACC,GAAa,MAAO,CAACZ,QAAQY,EAAUZ,QAAQ,MAC5B,QAAzBS,EAAMC,OAAOtB,WACtB,EAAKuB,UAAS,SAACC,GAAa,MAAO,CAACX,IAAIW,EAAUX,IAAI,O,4CAO1D,WACE,MAAyBX,KAAKK,MAAvBI,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,QAAQC,EAApB,EAAoBA,IAGjB,OAGD,qCACE,uDACA,cAAC,EAAD,CAAkBH,QAASR,KAAKQ,QAASN,gBAAiBF,KAAKE,kBAI/D,4CACA,cAAC,EAAD,CAAYO,KAAMA,EAAME,IAAKA,EAAKD,QAASA,EAASJ,MAAO,EAAGC,mBAAoB,W,GA7CxEJ,aAAZY,EACGQ,aAAa,CAEhBP,UAAU,EACVC,aAAa,EACbC,SAAS,GAoDAH,QCxDfS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9c302584.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass FeedbackOptions extends Component{\r\n \r\n  render(){\r\n    return(\r\n    <div>\r\n          <button className=\"Good\" onClick={this.props.onLeaveFeedback}>Good</button>\r\n          <button className=\"Neutral\"onClick={this.props.onLeaveFeedback}>Neutral</button>\r\n          <button className=\"Bad\"onClick={this.props.onLeaveFeedback}>Bad</button>\r\n        </div>\r\n\r\n  )\r\n    \r\n\r\n  }\r\n}\r\n\r\nexport default FeedbackOptions;","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nclass Statistics extends Component{\r\n    static propTypes={\r\n        total:PropTypes.number.isRequired,\r\n        positivePercentage:PropTypes.number.isRequired\r\n      }\r\n    state={\r\n        total:this.props.total,\r\n        positivePercentage:this.props.positivePercentage,\r\n    };\r\n    options=()=>{\r\n      const allTotal=[this.props.good,this.props.neutral,this.props.bad];\r\n      const fff=allTotal.reduce((acc, cur) => acc + cur)\r\n      return fff;\r\n  \r\n    }\r\n    \r\n    //countTotalFeedback = () => { };\r\n        \r\n    \r\n    //countPositiveFeedbackPercentage     \r\n   \r\n    render(){\r\n      const { good, neutral, bad}=this.props;\r\n      const {total, positivePercentage}=this.state;\r\n      \r\n        \r\n        return (\r\n            <div>\r\n          <p>Кол-во хороших комментариев: {good}</p>\r\n          <p>Кол-во нейтральных комментариев: {neutral}</p>\r\n          <p>Кол-во плохих комментариев: {bad}</p>\r\n          <p>Общее кол-во комментариев:{total}</p>\r\n          <p>% хороших комментариев от общего кол-ва:{positivePercentage}%</p>\r\n        </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Statistics;","import React,{Component} from 'react';\nimport PropTypes from 'prop-types'\nimport FeedbackOptions from './components/feedback/'\nimport Statistics from './components/statistics';\n\nclass App extends Component {\n  static defaultProps={\n    \n      goodProps:6,\n      neutralProps:8,\n      badProps:2\n     \n  }\n  static propTypes={\n    goodProps:PropTypes.number,\n    neutralProps:PropTypes.number,\n    badProps:PropTypes.number\n  }\n  state = {\n    good: this.props.goodProps,\n    neutral: this.props.neutralProps,\n    bad: this.props.badProps\n  }\n  onLeaveFeedback=(event)=>{\n    if (event.target.className==='Good'){\n      this.setState((prevState)=>{return {good:prevState.good+1}})\n    } else if(event.target.className==='Neutral'){\n      this.setState((prevState)=>{return {neutral:prevState.neutral+1}})\n    } else if (event.target.className==='Bad'){\n      this.setState((prevState)=>{return {bad:prevState.bad+1}})\n    }\n\n  }\n \n  \n \n  render() {\n    const {good,neutral,bad}=this.state;\n    \n    \n       return (\n      \n\n      <>\n        <h1>Please leave feedback</h1> \n        <FeedbackOptions  options={this.options} onLeaveFeedback={this.onLeaveFeedback}/>\n              \n\n       \n        <h3>Statistics</h3>\n        <Statistics good={good} bad={bad} neutral={neutral} total={0} positivePercentage={0}/>\n\n              \n      </>\n    );\n\n  }}\n\n    \n  \n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}